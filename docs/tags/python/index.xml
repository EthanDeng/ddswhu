<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Dongsheng Deng&#39;s homepage</title>
    <link>/tags/python/</link>
    <description>Recent content in Python on Dongsheng Deng&#39;s homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python Notes 2 - setdefault Method</title>
      <link>/posts/2018-07/python-note-setdefault-method/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018-07/python-note-setdefault-method/</guid>
      <description>1. 字典中 setdefault 方法怎么理解？ 1.1 问题描述 参考菜鸟教程中 setdefault 的描述：Python3 字典 setdefault() 方法
 Python 字典 setdefault() 方法和 get() 方法类似, 如果键不已经存在于字典中，将会添加键并将值设为默认值。
 字典的 setdefault 方法与字典赋值有什么区别？
1.2 语法区别 setdefault() 方法的语法：
dict.setdefault(key, default=None)  直接赋值方法：
dict[&#39;key&#39;] = value  1.3 理解 setdefault 方法 # 字典的 setdefault 方法的用途是给一个字典某个 key 指定默认的 value # 在 key 不存在的时候，会新建 key-value 对 # 但是当 key 存在的时候，setdefault 不会更改这个 key 所对应的 value。 spam = {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7} spam.setdefault(&#39;Age&#39;,&#39;25&#39;) spam.setdefault(&#39;Sex&#39;, &#39;NA&#39;) spam.</description>
    </item>
    
    <item>
      <title>Python Notes 1 - Collatz Sequence</title>
      <link>/posts/2018-07/python-note-collatz-sequence/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018-07/python-note-collatz-sequence/</guid>
      <description>1. 定义函数实现循环调用 1.1 问题描述 &amp;mdash; Collatz 序列 编写一个名为 collatz() 的函数，它有一个名为 number 的参数。如果参数是偶数，那么 collatz() 返回 number//2，并返回该值。如果 number 为奇数，collatz() 打印并返回 3*number+1。
然后编写一个程序，让用户输入一个整数，并不断对这个数调用 collatz()，直到函数返回值为 1。
  记得将 input() 的返回值用 int() 函数转为一个整数，否则它会是一个字符串。 number %2 == 0，整数 number 就是偶数，如果 number %2 == 1，它就是奇数。   这个程序的输出结果应该像如下：
Enter number: 3 10 5 16 8 4 2 1  1.2 解决方法 思路：利用 while 进行判断，让 collatz 自己循环调用自己。(代码下载)
def collatz(number): if number % 2 == 0: print(number // 2) return number // 2 else: print(3*number + 1) return 3*number + 1 n = input(&amp;quot;Enter number: \n&amp;quot;) while n !</description>
    </item>
    
    <item>
      <title>Export from MongoDB to csv</title>
      <link>/posts/2018-04/export-from-mongodb-to-csv/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018-04/export-from-mongodb-to-csv/</guid>
      <description>1. Use MongoDB to save json file When scraping data from web, the response may be json format, we can use json library to handle this.
import requests import json import pymongo # start pymongo connection = pymongo.MongoClient() data_base = connection.data_base collection = data_base.collection response = requests.post(url=url, data=payload, headers=headers) if response.status_code == 200: result_json = response.json() collection.insert(result_json)  If the json file is in right format, then you can use mongoexport command to export to csv.</description>
    </item>
    
    <item>
      <title>Start MongoDB as service</title>
      <link>/posts/2018-04/start-mongodb-as-service/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018-04/start-mongodb-as-service/</guid>
      <description>1. start MongoDB normally Once you have installed MongoDB on your PC, you can start MongoDB using
mongod --dbpath C:\MongoDB\Server\3.6\data\db  2. start MongDB as service  remove the existing MongDB service intall the MongoDB as a service start the MongoDB service stop the MongoDB service  mongod --remove mongod --dbpath=C:\MongoDB\Server\3.6\data\db --logpath=C:\MongoDB\Server\3.6\logs\log.txt --install net start MongoDB net stop MongoDB  When you install or remove MongoDB service to or from you computer, you can add the --serviceName YourServiceName flag after the command to customize the service name as you wish.</description>
    </item>
    
  </channel>
</rss>